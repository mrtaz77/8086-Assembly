.MODEL SMALL ;SCOPE OF CODE

.STACK 100H ;ALLOCATE MEMORY IN HEXADECIMAL

.DATA ;VARIABLE DECLARATION
CR EQU 0DH
LF EQU 0AH

NL DB CR,LF,'$'
ERROR DB CR,LF,'Invalid input$'


; EQU MEANS EQUAL
; THESE CONSTANTS ARE USED IN ALL CODES
; USED FOR NEW LINE


.CODE

MAIN PROC ; LIKE MAIN

;DATA SEGMENT INIT

MOV AX, @DATA;BRINGS DATA TO AX FOR INIT
MOV DS, AX
;THE ABOVE PART IS SAME FOR MOST CODES

MOV BL,0FFH
START:
MOV AH,1
INT 21H

CMP AL,'A'
JE ANS
JB ERR
CMP AL,'Z'
JBE ANS

CMP AL,'a'
JB ERR 
CMP AL,'z'
JA ERR

CMP AL,BL
JAE START
MOV BL,AL
JMP START



ERR: 
LEA DX,ERROR
MOV AH,9
INT 21H

JMP EXIT

ANS:

CMP BL,0FFH
JE ERR


LEA DX,NL
MOV AH,9
INT 21H

MOV DL,BL
MOV AH,2 
INT 21H

EXIT:

;DOES EXIT
MOV AH,4CH
INT 21H ;INTERRUPT FUNCTION


MAIN ENDP

; prints the number in decimal stored in AX register
PROC PRINT_NUM NEAR
    MOV BX,0AH
    PUSH 404H ; end of number
    ;DISPLAY NUM
    NUM_IN_STACK:
        CMP BX,AX
        JA EXIT_NUM_STACK
        MOV DX,0
        DIV BX
        PUSH DX
        JMP NUM_IN_STACK
    EXIT_NUM_STACK:
        CMP AX,0
        JE NO_PUSH
        PUSH AX
    NO_PUSH:
        MOV AH,2
    DISPLAY:
        POP DX
        CMP DX,404H
        JE EXIT_FUNC
        ADD DX,30H
        INT 21H
        JMP DISPLAY
    EXIT_FUNC:
        RET

END MAIN;END OF CODE