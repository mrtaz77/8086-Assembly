.MODEL SMALL ;SCOPE OF CODE

.STACK 100H ;ALLOCATE MEMORY IN HEXADECIMAL

.DATA ;VARIABLE DECLARATION
CR EQU 0DH
LF EQU 0AH

NL DB CR,LF,'$' 
ERROR DB CR,LF,'Invalid input$' 

; EQU MEANS EQUAL
; THESE CONSTANTS ARE USED IN ALL CODES
; NL USED FOR NEW LINE

.CODE

MAIN PROC ; LIKE MAIN

;DATA SEGMENT INIT

MOV AX, @DATA;BRINGS DATA TO AX FOR INIT
MOV DS, AX
;THE ABOVE PART IS SAME FOR MOST CODES

MOV BX,0

;Using loop to take a number
;and pushing it to the stack

INP:
MOV AH,1
INT 21H    

CMP AL,CR
JE NEXT
CMP AL,'0'
JB INP
CMP AL,'2'
JA INP

SUB AL,30H
AND AX,0FFH
PUSH AX
MOV AL,03H
MUL BX
MOV BX,AX
POP AX  
ADD BX,AX
JMP INP

NEXT: 

LEA DX,NL
MOV AH,9
INT 21H

MOV AX,BX
MOV BX,2    
PUSH 404H

CONV:
MOV DX,0  
DIV BX
PUSH AX

ADD DL,30H
MOV AH,2
INT 21H

POP AX

CMP BX,AX 
JBE CONV

CMP AX,0
JE EXIT  
MOV DL,AL
ADD DL,30H
MOV AH,2
INT 21H


EXIT:
;DOES EXIT
MOV AH,4CH
INT 21H ;INTERRUPT FUNCTION

MAIN ENDP    
        
END MAIN;END OF CODE