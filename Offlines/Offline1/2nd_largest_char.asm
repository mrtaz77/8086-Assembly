.MODEL SMALL ;SCOPE OF CODE

.STACK 100H ;ALLOCATE MEMORY IN HEXADECIMAL

.DATA ;VARIABLE DECLARATION
CR EQU 0DH
LF EQU 0AH
NL DB CR,LF,'$'

INPUT DB 'Enter 3 lowercase characters : $'
EQUAL DB CR,LF,'All letters are equal$'
ERROR DB CR,LF,'Invalid input$'

.CODE

MAIN PROC ; LIKE MAIN

;DATA SEGMENT INIT

MOV AX, @DATA;BRINGS DATA TO AX FOR INIT
MOV DS, AX

LEA DX,INPUT
MOV AH,9
INT 21H     

;CHAR INPUT
MOV AH,1
INT 21H
MOV BL,AL 

MOV AH,1
INT 21H
MOV BH,AL

MOV AH,1
INT 21H 
MOV DL,AL 

;inputs in bl(a),bh(b) and dl(c)

;input processing
CMP BL,'a'
JB ERR
CMP BL,'z'
JA ERR

CMP DL,'a'
JB ERR
CMP DL,'z'
JA ERR

CMP BH,'a'
JB ERR
CMP BH,'z'
JA ERR

CMP BL,BH
JE  ABEQUAL
JB  ALESSB
JA  AGREATB

ALESSB:
    CMP BH,DL
    JE ANSA
    JB ANSB
    JA ALESSB_BGREATC

AGREATB:
    CMP DL,BH
    JBE ANSB
    JA AGREATB_BLESSC

ABEQUAL:
    CMP BL,DL
    JE  EQL
    JA  ANSC
    JB  ANSA

ALESSB_BGREATC:
    CMP BL,DL
    JAE ANSA
    JB ANSC  

AGREATB_BLESSC:
    CMP BL,DL
    JE ANSB
    JB ANSA
    JA ANSC
    
ANSA:
    LEA DX,NL
    MOV AH,9
    INT 21H
    
    MOV DL,BL
    JMP EXITANS 

ANSB:
    LEA DX,NL
    MOV AH,9
    INT 21H
    
    MOV DL,BH
    JMP EXITANS

ANSC:  
    MOV BH,DL ;temporarily move c to b's register

    LEA DX,NL
    MOV AH,9
    INT 21H
    
    MOV DL,BH
    JMP EXITANS  
    
ERR:
    LEA DX,ERROR
    MOV AH,9
    JMP EXIT

EQL:
    LEA DX,EQUAL 
    MOV AH,9
    JMP EXIT    

EXITANS:
    MOV AH,2

EXIT:      
    INT 21H
    
;DOES EXIT   
    MOV AH,4CH
    INT 21H ;INTERRUPT FUNCTION
    
MAIN ENDP
END MAIN;END OF CODE